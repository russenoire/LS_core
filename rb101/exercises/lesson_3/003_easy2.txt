# question1
ages = { "Herman" => 32, "Lily" => 30, "Grandpa" => 402, "Eddie" => 10 }

# --> ages.member?("Spot")
# --> ages.has_key?("Spot") and ages.include?("Spot") are both kosher

# question2
munsters_description = "The Munsters are creepy in a good way."
# --> munsters_description.swapcase!
# --> munsters_description.capitalize!
# --> munsters_description.downcase!
# --> munsters_description.upcase!

# question3
ages = { "Herman" => 32, "Lily" => 30, "Grandpa" => 402, "Eddie" => 10 }
additional_ages = { "Marilyn" => 22, "Spot" => 237 }

# --> ages.merge!(additional_ages)

# question4
advice = "Few things in life are as important as house training your pet dinosaur."

# --> advice.include?("Dino")

# question5
flintstones = ["Fred", "Barney", "Wilma", "Betty", "BamBam", "Pebbles"]

# --> flintstones = %w(Fred Barney Wilma Betty BamBam Pebbles)

# question6
flintstones = %w(Fred Barney Wilma Betty BamBam Pebbles)

# --> flintstones << "Dino"

# question7
flintstones = %w(Fred Barney Wilma Betty BamBam Pebbles)

# --> flintstones.push("Dino", "Hoppy")

# question8
advice = "Few things in life are as important as house training your pet dinosaur."

# --> advice.slice!(0..38)
# if String#slice is used instead, advice is not modified.

# question9
statement = "The Flintstones Rock!"

# --> statement.count('t')
# the doc for String#count is confusing; to me there is no indication that the
# method can take chars. i also don't understand the return value for substrings.

#question10
title = "Flintstone Family Members"

# 40 char wide table
# string is 25 chars long
# (40/2) - (title.length/2).floor
# --> title.insert(0, ((40/2) - (title.length/2).floor) * ' ')
# or title.center(40)? geez, lol
